package org.usfirst.frc.team4534.robot;


import edu.wpi.first.wpilibj.SampleRobot;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.smartdashboard.*;

//import edu.wpi.first.wpilibj.Talon;

/**
 * This is a demo program showing the use of the RobotDrive class, specifically it 
 * contains the code necessary to operate a robot with tank drive.
 *
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the SampleRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 *
 * WARNING: While it may look like a good choice to use for your code if you're inexperienced,
 * don't. Unless you know what you are doing, complex code will be much more difficult under
 * this system. Use IterativeRobot or Command-Based instead if you're new.
 */
public class Robot extends SampleRobot {
    RobotDrive myRobot;  // class that handles basic drive operations
    Joystick controller;
    Double leftAxis;
    Double rightAxis;
    //Talon motorTalon;
    public Robot() {
        myRobot = new RobotDrive(0, 1);
        myRobot.setExpiration(0.1);
        controller = new Joystick(0);
        leftAxis = controller.getRawAxis(0);
        rightAxis = controller.getRawAxis(1);
        SmartDashboard.putString("DB/String 0", "My 21 Char TestString");
        //motorTalon = new Talon(5);
        //motorTalon.set(100);
    }

    
    /*
     * Runs the motors with tank steering.
     */
    public void operatorControl() {
        myRobot.setSafetyEnabled(true);
        while (isOperatorControl() && isEnabled()) {
        	myRobot.arcadeDrive(controller.getRawAxis(1), controller.getRawAxis(0)*-1);
            Timer.delay(0.005);		// wait for a motor update time
        }
    }

    public static void display(int line, String msg) {
    	/*
        DriverStationLCD.Line l = DriverStationLCD.Line.kUser1;        
        if(line == 1) l = DriverStationLCD.Line.kUser1;        
        if(line == 2) l = DriverStationLCD.Line.kUser2;        
        if(line == 3) l = DriverStationLCD.Line.kUser3;        
        if(line == 4) l = DriverStationLCD.Line.kUser4;        
        if(line == 5) l = DriverStationLCD.Line.kUser5;
        if(line == 6) l = DriverStationLCD.Line.kUser6;
       
        DriverStationLCD.getInstance().println(l, line, "                                        ");        
        DriverStationLCD.getInstance().updateLCD();        
        DriverStationLCD.getInstance().println(l, line, msg);        
        DriverStationLCD.getInstance().updateLCD();
        */
    }
    
}
