package org.usfirst.frc.team4534.robot;

import java.util.ArrayList;

import edu.wpi.first.wpilibj.AnalogInput;

import org.usfirst.frc.team4534.robot.AnalogGyroThread;

public class AnalogGyro {
	private static AnalogInput gyro;
	private static AnalogInput temp;
	private static ArrayList<Double> values;
	private static Double gyroBase = 2.5;
	private static Double tempBase = 2.5;
	private static Double degreesCelcius = 25.0;
	private static Double angle;
	private static boolean isTemp;
	
	static int counter;
	
	private static final int SAMPLE_SIZE = 100;
	private static final int TEMP_SAMPLE_SIZE = 10;
	
	public AnalogGyro(int channel) {
		values = new ArrayList<Double>();
		gyro = new AnalogInput(channel);
		initGyro();
	}
	
	public AnalogGyro(int channelGyro, int channelTemp) {
		gyro = new AnalogInput(channelGyro);
		temp = new AnalogInput(channelTemp);
		isTemp = true;
		//initTemp();
		initGyro();
	}
	
	public AnalogGyro(AnalogInput ai) {
		gyro = ai;
		initGyro();
	}
	
	public AnalogGyro(AnalogInput ai1, AnalogInput ai2) {
		gyro = ai1;
		temp = ai2;
		isTemp = true;
		//initTemp();
		initGyro();
	}
	
	public static void initTemp() {
		//calculate new temperature
		while(values.size() <= TEMP_SAMPLE_SIZE) {
			values.add(temp.getVoltage());
		}
		
		Double avg = 0.0;
		for(Double val : values) {
			avg += val;
		}
		avg = avg.doubleValue() / values.size(); //should be around 2.5V with the KOP gyro from recent years (2011-2014)
		
		Double milliVolts = avg - tempBase;
		
		//divide by 9mv per degree
		degreesCelcius = (milliVolts / 9) - 252.7777778;
	}
	
	public static Double getTemp() {
		return degreesCelcius;
	}
	
	public static void setTemp(Double t) {
		degreesCelcius = t;
	}
	
	public static void initGyro() {
		initGyro(null);
	}
	
	public static void initGyro(Double temp) {
		
		boolean useTemp = !(temp == null);
		
		do {
			try {
			values.add(gyro.getVoltage());
			} catch (NullPointerException e) {
				
			}
		} while(values.size() <= SAMPLE_SIZE);
		
		Double avg = 0.0;
		for(Double val : values) {
			avg += val;
		}
		
		avg = avg.doubleValue() / values.size(); //should be around 2.5V with the KOP gyro from recent years (2011-2014)
		gyroBase = avg;
		
		(new Thread(new AnalogGyroThread())).start();
	}
	
	
	static Double getAngle() {
		return angle;
	}
	
	static void setAngle(Double a) {
		angle = a;
	}
	
	
	public int getCount() {
		return counter;
	}
	
	private static class GyroLoop implements Runnable {

		@Override
		public void run() {
			try {
				//run once per second
				while(true) {
					counter++;
				Double alteredValue = gyro.getVoltage() - gyroBase;
				
				Double millivolts = alteredValue*1000;
				
				//divide by 7mv per degree, and add to angle
				Double alterAngle = millivolts/7;
				
				angle += alterAngle;
				
				//if less than 0, or greater than 360, loop over
				while(angle < 0) {
					angle += 360;
				}
			
				while(angle > 360) {
					angle -= 360;
				}
				
				Thread.sleep(1000);
				}
			} catch (InterruptedException e) {
				//TODO: Do something here.
				return;
			}
		}
		
	}
	
}
